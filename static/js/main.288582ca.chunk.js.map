{"version":3,"sources":["store.js","simpleAutoComplete.js","simpleMap.js","simpleAddressSearch.js","simpleMapApp.js","index.js"],"names":["StoreContext","React","createContext","children","useState","longtitude","setLongtitude","latitude","setLatitude","store","address","setAddress","Provider","value","autocompleteService","current","useStyles","makeStyles","theme","icon","color","palette","text","secondary","marginRight","spacing","root","display","flexDirection","minHeight","main","marginTop","marginBottom","footer","padding","backgroundColor","type","grey","paper","alignItems","avatar","margin","form","width","submit","SimpleAutoComplete","classes","inputValue","setInputValue","options","setOptions","addressContext","useContext","loaded","useRef","window","document","querySelector","src","position","id","script","createElement","setAttribute","appendChild","loadScript","handleChange","event","target","fetch","useMemo","throttle","request","callback","getPlacePredictions","useEffect","active","google","maps","places","AutocompleteService","input","results","className","Avatar","Typography","component","variant","onSubmit","preventDefault","addressElement","getElementById","Geocode","setApiKey","process","fromAddress","then","response","geometry","location","lat","lng","error","console","Autocomplete","style","getOptionLabel","option","description","filterOptions","x","autoComplete","includeInputInList","renderInput","params","TextField","label","fullWidth","onChange","renderOption","matches","structured_formatting","main_text_matched_substrings","parts","parse","main_text","map","match","offset","length","Grid","container","item","xs","part","index","key","fontWeight","highlight","secondary_text","Button","SimpleMap","FoundLocatioin","center","height","zoom","Copyright","Link","href","Date","getFullYear","SimpleAddressSearch","CssBaseline","Container","maxWidth","Divider","version","SimpleMapApp","Component","require","config","forEach","ReactDOM","render","Fragment"],"mappings":"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","file":"static/js/main.288582ca.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const StoreContext = React.createContext(null)\r\n\r\nexport default ({ children }) => {\r\n    const [longtitude, setLongtitude] = React.useState([])\r\n    const [latitude, setLatitude] = React.useState([])\r\n    const [address, setAddress] = React.useState([])\r\n\r\n    const store = { latitude, setLatitude, longtitude, setLongtitude, address, setAddress}\r\n\r\n    return <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\r\n}","import React from 'react';\r\nimport { Avatar, Button, TextField, Grid, Typography} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport CommuteIcon from '@material-ui/icons/Commute';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport throttle from 'lodash/throttle';\r\nimport Geocode from \"react-geocode\";\r\nimport { StoreContext } from './store'\r\n\r\n\r\nconst autocompleteService = { current: null };\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    color: theme.palette.text.secondary,\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    minHeight: '100vh',\r\n  },\r\n  main: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(3, 2),\r\n    marginTop: 'auto',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\nexport default function SimpleAutoComplete() {\r\n  const classes = useStyles();\r\n  const [inputValue, setInputValue] = React.useState('');\r\n  const [options, setOptions] = React.useState([]);\r\n\r\n  const addressContext = React.useContext(StoreContext);\r\n  const { setLatitude, setLongtitude, setAddress} = addressContext;\r\n\r\n  function loadScript(src, position, id) {\r\n    if (!position) {\r\n      return;\r\n    }\r\n  \r\n    const script = document.createElement('script');\r\n    script.setAttribute('async', '');\r\n    script.setAttribute('id', id);\r\n    script.src = src;\r\n    position.appendChild(script);\r\n  }\r\n  const loaded = React.useRef(false);\r\n\r\n  if (typeof window !== 'undefined' && !loaded.current) {\r\n    if (!document.querySelector('#google-maps')) {\r\n      loadScript(\r\n        'https://maps.googleapis.com/maps/api/js?libraries=places&key=' + process.env.REACT_APP_GOOGLE_API_KEY,\r\n        document.querySelector('head'),\r\n        'google-maps',\r\n      );\r\n    }\r\n\r\n    loaded.current = true;\r\n  }\r\n  \r\n\r\n  const handleChange = (event) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  const fetch = React.useMemo(\r\n    () =>\r\n      throttle((request, callback) => {\r\n        autocompleteService.current.getPlacePredictions(request, callback);\r\n      }, 200),\r\n    [],\r\n  );\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    let addressElement = document.getElementById(\"address-autocomplete\");\r\n    if (addressElement) {\r\n      let address = addressElement.value;\r\n      Geocode.setApiKey(process.env.REACT_APP_GOOGLE_API_KEY);\r\n      Geocode.fromAddress(address).then(\r\n        response => {\r\n          const { lat, lng } = response.results[0].geometry.location;\r\n          setLatitude(lat);\r\n          setLongtitude(lng);\r\n          setAddress(address);\r\n        },\r\n        error => {\r\n          console.error(error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    let active = true;\r\n    if (!autocompleteService.current && window.google) {\r\n      autocompleteService.current = new window.google.maps.places.AutocompleteService();\r\n    }\r\n    if (!autocompleteService.current) {\r\n      return undefined;\r\n    }\r\n\r\n    if (inputValue === '') {\r\n      setOptions([]);\r\n      return undefined;\r\n    }\r\n\r\n    fetch({ input: inputValue }, (results) => {\r\n      if (active) {\r\n        setOptions(results || []);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [inputValue, fetch]);\r\n\r\n  return (\r\n    <div className={classes.paper}>\r\n\r\n      <Avatar className={classes.avatar}>\r\n        <CommuteIcon />\r\n      </Avatar>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Search address\r\n      </Typography>\r\n      <form className={classes.form} onSubmit={handleSubmit}>\r\n        <Autocomplete\r\n          id='address-autocomplete'\r\n          style={{ width: '100%' }}\r\n          getOptionLabel={(option) => (typeof option === 'string' ? option : option.description)}\r\n          filterOptions={(x) => x}\r\n          options={options}\r\n          autoComplete\r\n          includeInputInList\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Enter an address\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={handleChange}\r\n            />\r\n          )}\r\n          renderOption={(option) => {\r\n            const matches = option.structured_formatting.main_text_matched_substrings;\r\n            const parts = parse(\r\n              option.structured_formatting.main_text,\r\n              matches.map((match) => [match.offset, match.offset + match.length]),\r\n            );\r\n\r\n            return (\r\n              <Grid container alignItems=\"center\">\r\n                <Grid item>\r\n                  <LocationOnIcon className={classes.icon} />\r\n                </Grid>\r\n                <Grid item xs>\r\n                  {parts.map((part, index) => (\r\n                    <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\r\n                      {part.text}\r\n                    </span>\r\n                  ))}\r\n\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    {option.structured_formatting.secondary_text}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            );\r\n          }}\r\n        />\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n        >\r\n          Search\r\n          </Button>\r\n      </form>\r\n\r\n    </div>\r\n\r\n\r\n  );\r\n}\r\n","import React from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport PlaceIcon from '@material-ui/icons/Place';\r\nimport { Typography} from '@material-ui/core';\r\nimport { StoreContext } from './store';\r\n\r\nconst SimpleMap = () => {\r\n\r\n  const FoundLocatioin = ({ text }) =>\r\n    <div>\r\n      <PlaceIcon color=\"secondary\" />\r\n      <Typography variant=\"caption\" display=\"block\" color=\"secondary\">\r\n        {text}\r\n      </Typography>\r\n    </div>;\r\n\r\n  const addressContext = React.useContext(StoreContext);\r\n  const { latitude, longtitude, address } = addressContext;\r\n\r\n\r\n  if (typeof latitude == 'number' && typeof longtitude == 'number') {\r\n    let center= {\r\n        lat: latitude,\r\n        lng: longtitude\r\n      };\r\n    let zoom= 11;\r\n\r\n    return (\r\n      <div style={{ height: '100vh', width: '100%' }}>\r\n        <GoogleMapReact\r\n          center={center}\r\n          zoom={zoom}\r\n        >\r\n          <FoundLocatioin\r\n            lat={latitude}\r\n            lng={longtitude}\r\n            text={address} \r\n          />\r\n        </GoogleMapReact>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <></>\r\n  }\r\n}\r\n\r\nexport default SimpleMap;\r\n","import React from 'react';\r\nimport { Divider, Typography, CssBaseline, Container, Link } from '@material-ui/core';\r\nimport SimpleAutoComplete from './simpleAutoComplete';\r\nimport SimpleMap from './simpleMap';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    minHeight: '100vh',\r\n  },\r\n  main: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(3, 2),\r\n    marginTop: 'auto',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\r\n  },\r\n\r\n}));\r\n\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        No Copy Right\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default function SimpleAddressSearch() {\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Container component=\"main\" className={classes.main} maxWidth=\"sm\">\r\n        <SimpleAutoComplete />\r\n        <Divider />\r\n        <SimpleMap />\r\n        \r\n      </Container>\r\n\r\n      <footer className={classes.footer}>\r\n        <Container maxWidth=\"sm\">\r\n          <Typography variant=\"body1\">Currently using React {React.version}</Typography>\r\n          <Copyright />\r\n        </Container>\r\n      </footer>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component }  from 'react';\r\nimport SimpleAddressSearch from './simpleAddressSearch';\r\n\r\nclass SimpleMapApp extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SimpleAddressSearch/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SimpleMapApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SimpleMapApp from './simpleMapApp';\nimport StoreProvider from './store';\n\nrequire('dotenv').config();\n\nconst requiredKeys = [\n  'REACT_APP_ENV',\n  'REACT_APP_GOOGLE_API_KEY'\n];\nrequiredKeys.forEach((key) => {\n  if (!process.env[key]) {\n    console.error(`${key} env variable was not set  ` + process.env[key]);\n  }\n});\n\nReactDOM.render(\n  <StoreProvider>\n    <React.Fragment>\n      <SimpleMapApp />\n    </React.Fragment>\n  </StoreProvider>,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}